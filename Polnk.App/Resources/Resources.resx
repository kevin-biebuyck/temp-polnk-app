<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome back !</value>
  </data>
  <data name="LoginNote" xml:space="preserve">
    <value>Enter your email and your password to log in to your account.</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Enter your email address</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>Enter your password</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot your password ?</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Or" xml:space="preserve">
    <value>Or</value>
  </data>
  <data name="GoogleLogin" xml:space="preserve">
    <value>Continue with Google</value>
  </data>
  <data name="AppleLogin" xml:space="preserve">
    <value>Continue with Apple</value>
  </data>
  <data name="NewToPolnk" xml:space="preserve">
    <value>You're new to Polnk ?</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create your account</value>
  </data>
  <data name="Forget" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="ForgetNote" xml:space="preserve">
    <value>Please enter the email address associated with your account to receive the code.</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send code</value>
  </data>
  <data name="ChangeNote" xml:space="preserve">
    <value>Please enter your new password to access to your account again</value>
  </data>
  <data name="ChangePass" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ConfirmPass" xml:space="preserve">
    <value>Confirm your password</value>
  </data>
  <data name="EnterNewPass" xml:space="preserve">
    <value>Enter your new password</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Verfication" xml:space="preserve">
    <value>Verification code</value>
  </data>
  <data name="VerficationNote" xml:space="preserve">
    <value>Please enter the 5-digit OTP sent to your email address </value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>Verify</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="Agreement" xml:space="preserve">
    <value>I agree to all terms and conditions</value>
  </data>
  <data name="AlreadyUser" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="CreateNewAccount" xml:space="preserve">
    <value>Create new account</value>
  </data>
  <data name="DateofBirth" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="FullNameNote" xml:space="preserve">
    <value>Enter your name</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="NewAccountNote" xml:space="preserve">
    <value>Please enter your personal information to join Polnk</value>
  </data>
  <data name="Others" xml:space="preserve">
    <value>Others</value>
  </data>
  <data name="EnterPhoneNumber" xml:space="preserve">
    <value>Enter your phone number</value>
  </data>
  <data name="SelectGenders" xml:space="preserve">
    <value>Select your gender</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="DD/MM/YY" xml:space="preserve">
    <value>DD/MM/YY</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="AccountCreate" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DescriptionNote" xml:space="preserve">
    <value>Enter a description about yourself</value>
  </data>
  <data name="Investor" xml:space="preserve">
    <value>I am an investor</value>
  </data>
  <data name="JobNote" xml:space="preserve">
    <value>Enter your job title</value>
  </data>
  <data name="JobTitle" xml:space="preserve">
    <value>Job title</value>
  </data>
  <data name="ProfessionalInfo" xml:space="preserve">
    <value>Professional Information</value>
  </data>
  <data name="ProfessionalInfoNote" xml:space="preserve">
    <value>Please enter your Professional information to get the best offers </value>
  </data>
  <data name="Skills" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="SkillsNote" xml:space="preserve">
    <value>Enter new skills</value>
  </data>
  <data name="PhotoNote" xml:space="preserve">
    <value>Please  choose a photo for your profile</value>
  </data>
  <data name="ProfilePhoto" xml:space="preserve">
    <value>Profile Photo</value>
  </data>
  <data name="Followers" xml:space="preserve">
    <value>Followers</value>
  </data>
  <data name="Following" xml:space="preserve">
    <value>Following</value>
  </data>
  <data name="AddIntro" xml:space="preserve">
    <value>AddIntro</value>
  </data>
  <data name="Education" xml:space="preserve">
    <value>Education</value>
  </data>
  <data name="Experience" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="Langauages" xml:space="preserve">
    <value>Languages</value>
  </data>
  <data name="You" xml:space="preserve">
    <value>You</value>
  </data>
  <data name="InvalidName" xml:space="preserve">
    <value>Enter Name</value>
  </data>
  <data name="InvalidPhoneNo" xml:space="preserve">
    <value>Enter Phone Number</value>
  </data>
  <data name="InvalidDescription" xml:space="preserve">
    <value>Please Enter a Description</value>
  </data>
  <data name="InvalidGenderSelection" xml:space="preserve">
    <value>Please Select a Gender</value>
  </data>
  <data name="InvalidImage" xml:space="preserve">
    <value>Please Upload Image</value>
  </data>
  <data name="InvalidJobTitle" xml:space="preserve">
    <value>Please Enter a Job Title</value>
  </data>
  <data name="Degree" xml:space="preserve">
    <value>Degree</value>
  </data>
  <data name="EnterDetails" xml:space="preserve">
    <value>Please Enter Details</value>
  </data>
  <data name="LastDate" xml:space="preserve">
    <value>LastDate</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>StartDate</value>
  </data>
  <data name="Bachelor" xml:space="preserve">
    <value>Bachelor</value>
  </data>
  <data name="Doctoral" xml:space="preserve">
    <value>Doctoral</value>
  </data>
  <data name="Master" xml:space="preserve">
    <value>Master</value>
  </data>
  <data name="Professional" xml:space="preserve">
    <value>Professional</value>
  </data>
</root>